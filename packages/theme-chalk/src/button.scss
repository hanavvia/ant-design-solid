@use './var/common' as *;
@use './mixins/function' as *;
@use 'mixins/mixins' as *;

@include b(button) {
  outline: none;
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 400;
  white-space: nowrap;
  text-align: center;
  background-image: none;
  background-color: transparent;
  border: 1px solid transparent;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
  user-select: none;
  touch-action: manipulation;
  color: var(#{getCssVarName('button', 'font-color')});
  font-size: 14px; //TODO
  height: 32px; //TODO
  padding: 4px 15px; //TODO
  border-radius: var(#{getCssVarName('button', 'border-radius')});
  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.02);
  border-color: var(#{getCssVarName('button', 'border-color')});

  &:hover {
    border-color: var(#{getCssVarName('button', 'primary-bg-color')});
    color: var(#{getCssVarName('button', 'primary-bg-color')});
  }

  /* === type === */
  @include m(type-primary) {
    color: var(#{getCssVarName('button', 'primary-font-color')});
    background-color: var(#{getCssVarName('button', 'primary-bg-color')});
    box-shadow: 0 2px 0 rgba(5, 145, 255, 0.1);

    &:hover {
      color: var(#{getCssVarName('button', 'primary-font-color')});
      background-color: var(
        #{getCssVarName('button', 'primary-hover-bg-color')}
      );
    }
  }

  @include m(type-dashed) {
    border-style: dashed;
  }

  @include m(type-text) {
    border: none;

    &:hover {
      background-color: var(#{getCssVarName('button', 'text-hover-bg-color')});
    }
  }

  @include m(type-link) {
    border: none;
    color: var(#{getCssVarName('button', 'link-font-color')});

    &:hover {
      color: var(#{getCssVarName('button', 'link-hover-font-color')});
    }
  }

  /* === icon === */
  @include when(not-icon-only) {
    @include e(icon) {
      margin-inline-end: 8px;
    }
  }
  @include e(icon) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: 16px; // TODO size && css var
  }

  /* === shape === */
  @include m(shape-circle) {
    min-width: 32px; // TODO size
    padding-inline-start: 0;
    padding-inline-end: 0;
    border-radius: 50%;
  }
}
